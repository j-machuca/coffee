import Head from "next/head";
import Image from "next/image";

// Components

import Banner from "@/components/banner/banner.component";
import Card from "@/components/card/card.component";

import { fetchCoffeeStores } from "../../lib/coffee-stores";

// styles
import styles from "@/styles/Home.module.css";
import useTrackLocation from "../../hooks/useTrackLocations";
import { useContext, useEffect, useState } from "react";
import { ACTION_TYPES, StoreContext } from "./_app";

export const getStaticProps = async (context) => {
    const data = await fetchCoffeeStores();

    return {
        props: {
            coffeeStore: data,
        },
    };
};

export default function Home(props) {
    const { coffeeStore } = props;

    const {
        handleTrackLocation,

        locationErrorMsg,
        isFindingLocation,
    } = useTrackLocation();

    const { dispatch, state } = useContext(StoreContext);

    const { coffeeStores, latLng } = state;

    const [coffeeStoresError, setCoffeeStoresError] = useState(null);

    useEffect(() => {
        async function setCoffeeStoresByLocation() {
            console.log(latLng);
            if (latLng) {
                try {
                    const fetchedCoffeeStores = await fetchCoffeeStores(
                        latLng,
                        6
                    );
                    console.log({ fetchedCoffeeStores });
                    // setCoffeeStores(fetchedCoffeeStores);
                    dispatch({
                        type: ACTION_TYPES.SET_COFFEE_STORES,
                        payload: { coffeeStores: fetchedCoffeeStores },
                    });
                } catch (error) {
                    //set error
                    setCoffeeStoresError(error.message);
                }
            }
        }
        setCoffeeStoresByLocation();
    }, [latLng]);

    const handleOnBannerBtnClick = () => {
        console.log("Banner button had been clicked");
        handleTrackLocation();
    };

    return (
        <>
            <Head>
                <title>Coffee Connoisseur</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <Banner
                    buttonText={
                        isFindingLocation ? "Loading..." : "View stores nearby"
                    }
                    handleOnClick={handleOnBannerBtnClick}
                />
                {locationErrorMsg && (
                    <p>{`Something went wrong - ${locationErrorMsg}`}</p>
                )}
                <Image
                    className={styles.heroImage}
                    src="/static/img/hero-image.png"
                    alt="Sitting drinking cofee"
                    width={700}
                    height={400}
                />
                {coffeeStoresError && (
                    <p>{`Something went wrong - ${coffeeStoresError}`}</p>
                )}
                {coffeeStores.length > 0 && (
                    <div className={styles.sectionWrapper}>
                        <h2 className={styles.heading2}>Stores near me</h2>
                        <div className={styles.cardLayout}>
                            {coffeeStores.map((store) => {
                                return (
                                    <Card
                                        key={store.id}
                                        className={styles.card}
                                        name={store.name}
                                        imgUrl={
                                            store.imgUrl ||
                                            "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                                        }
                                        href={`/coffee-store/${store.id}`}
                                    />
                                );
                            })}
                        </div>
                    </div>
                )}
                {coffeeStore.length > 0 && (
                    <div className={styles.sectionWrapper}>
                        <h2 className={styles.heading2}>Toronto Stores</h2>
                        <div className={styles.cardLayout}>
                            {coffeeStore.map((store) => {
                                return (
                                    <Card
                                        key={store.id}
                                        className={styles.card}
                                        name={store.name}
                                        imgUrl={
                                            store.imgUrl ||
                                            "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                                        }
                                        href={`/coffee-store/${store.id}`}
                                    />
                                );
                            })}
                        </div>
                    </div>
                )}
            </main>
        </>
    );
}
